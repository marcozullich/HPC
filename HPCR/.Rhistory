ylab("Time (microseconds)")
ggplot(data = times_sum, aes(y = X.bytes, x = min_bw)) +
geom_line() +
xlab("Bandwidth (MB/s)") +
ylab("Time (microseconds)")
times_sum = times %>% group_by(X.bytes) %>%
summarise(min_time = mean(t.usec.), min_bw = mean(Mbytes.sec))
ggplot(data = times_sum, aes(x = X.bytes, y = min_time)) +
geom_line() +
xlab("Bytes") +
ylab("Time (microseconds)")
ggplot(data = times_sum, aes(y = X.bytes, x = min_bw)) +
geom_line() +
xlab("Bandwidth (MB/s)") +
ylab("Time (microseconds)")
times_sum = times %>% group_by(X.bytes) %>%
summarise(min_time = median(t.usec.), min_bw = median(Mbytes.sec))
ggplot(data = times_sum, aes(x = X.bytes, y = min_time)) +
geom_line() +
xlab("Bytes") +
ylab("Time (microseconds)")
ggplot(data = times_sum, aes(y = X.bytes, x = min_bw)) +
geom_line() +
xlab("Bandwidth (MB/s)") +
ylab("Time (microseconds)")
times_sum = times %>% group_by(X.bytes) %>%
summarise(min_time = min(t.usec.), min_bw = min(Mbytes.sec))
ggplot(data = times_sum, aes(x = X.bytes, y = min_time)) +
geom_line() +
xlab("Bytes") +
ylab("Time (microseconds)")
ggplot(data = times_sum, aes(y = X.bytes, x = min_bw)) +
geom_line() +
xlab("Bandwidth (MB/s)") +
ylab("Time (microseconds)")
ggplot(data = times_sum, aes(x = X.bytes, y = min_bw)) +
geom_line() +
xlab("Bandwidth (MB/s)") +
ylab("Time (microseconds)")
ggplot(data = times_sum, aes(x = X.bytes, y = min_bw)) +
geom_line() +
ylab("Bandwidth (MB/s)") +
xlab("Time (microseconds)")
times_sum = times %>% group_by(X.bytes) %>%
summarise(min_time = min(t.usec.), min_bw = min(Mbytes.sec)) %>%
mutate(mes_size = X.bytes/1000000)
ggplot(data = times_sum, aes(x = X.bytes, y = min_time)) +
geom_line() +
xlab("Bytes") +
ylab("Time (microseconds)")
ggplot(data = times_sum, aes(x = X.bytes, y = min_bw)) +
geom_line() +
ylab("Bandwidth (MB/s)") +
xlab("Message size")
ggplot(data = times_sum, aes(x = mes_size, y = min_time)) +
geom_line() +
xlab("Message size (MB)") +
ylab("Time (microseconds)")
ggplot(data = times_sum, aes(x = mes_size, y = min_bw)) +
geom_line() +
ylab("Bandwidth (MB/s)") +
xlab("Message size (MB)")
library(tidyverse)
procs = c(1,2,4,8,16,20)
strong_10e5 = c(1.686, 1.568, 1.595, 1.644, 1.788, 1.866)
strong_10e7 = c(1.708, 1.623, 1.587, 1.683, 1.8, 1.818)
strong_10e9 = c(21.096, 11.621, 6.633, 4.533, 3.168,2.96 )
timings_strong = tibble(procs, strong_10e5, strong_10e7, strong_10e9)
timings_strong
ggplot(data = timings_strong, aes(x = procs))+
geom_line(aes(y = strong_10e5))
ggplot(data = timings_strong, aes(x = procs))+
geom_line(aes(y = strong_10e5)) +
geom_line(aes(y = strong_10e7, color = "red"))
ggplot(data = timings_strong, aes(x = procs))+
geom_line(aes(y = strong_10e5, color = "black")) +
geom_line(aes(y = strong_10e7, color = "red")) +
geom_line(aes(y = strong_10e9, color = "blue"))
ggplot(data = timings_strong, aes(x = procs))+
geom_line(aes(y = strong_10e5, color = "yellow")) +
geom_line(aes(y = strong_10e7, color = "red")) +
geom_line(aes(y = strong_10e9, color = "blue"))
ggplot(data = timings_strong, aes(x = procs))+
geom_line(aes(y = strong_10e5), color = "yellow") +
geom_line(aes(y = strong_10e7), color = "red") +
geom_line(aes(y = strong_10e9), color = "blue")
ggplot(data = timings_strong, aes(x = procs))+
geom_line(aes(y = strong_10e5)) +
geom_line(aes(y = strong_10e7)) +
geom_line(aes(y = strong_10e9)) +
scale_color_manual(name="Line Color",
values=c(myline1="red", myline2="blue", myline3="purple"))
ggplot(data = timings_strong, aes(x = procs))+
geom_line(aes(y = strong_10e5, color = "red")) +
geom_line(aes(y = strong_10e7)) +
geom_line(aes(y = strong_10e9)) +
scale_color_manual(name="Line Color",
values=c(myline1="red", myline2="blue", myline3="purple"))
ggplot(data = timings_strong, aes(x = procs))+
geom_line(aes(y = strong_10e5, color = "myline1")) +
geom_line(aes(y = strong_10e7)) +
geom_line(aes(y = strong_10e9)) +
scale_color_manual(name="Line Color",
values=c(myline1="red", myline2="blue", myline3="purple"))
ggplot(data = timings_strong, aes(x = procs))+
geom_line(aes(y = strong_10e5, color = "myline1")) +
geom_line(aes(y = strong_10e7, color = "myline2")) +
geom_line(aes(y = strong_10e9, color = "myline3")) +
scale_color_manual(name="Line Color",
values=c(myline1="red", myline2="blue", myline3="purple"))
ggplot(data = timings_strong, aes(x = procs))+
geom_line(aes(y = strong_10e5, color = "myline1")) +
geom_line(aes(y = strong_10e7, color = "myline2")) +
geom_line(aes(y = strong_10e9, color = "myline3")) +
scale_color_manual(name="Line Color",
values=c(myline1="red", myline2="blue", myline3="orange"))
ggplot(data = timings_strong, aes(x = procs))+
geom_line(aes(y = strong_10e5, color = "10e5")) +
geom_line(aes(y = strong_10e7, color = "myline2")) +
geom_line(aes(y = strong_10e9, color = "myline3")) +
scale_color_manual(name="Line Color",
values=c(10e5="red", myline2="blue", myline3="orange")) +
ggplot(data = timings_strong, aes(x = procs))+
geom_line(aes(y = strong_10e5, color = "10e5")) +
geom_line(aes(y = strong_10e7, color = "myline2")) +
geom_line(aes(y = strong_10e9, color = "myline3")) +
scale_color_manual(name="Line Color",
values=c("10e5"="red", myline2="blue", myline3="orange")) +
ggplot(data = timings_strong, aes(x = procs))+
geom_line(aes(y = strong_10e5, color = " 10e5")) +
geom_line(aes(y = strong_10e7, color = " 10e7")) +
geom_line(aes(y = strong_10e9, color = " 10e9")) +
scale_color_manual(name="Line Color",
values=c(" 10e5"="red", " 10e7"="blue", " 10e9"="orange"))
ggplot(data = timings_strong, aes(x = procs))+
geom_line(aes(y = strong_10e5, color = " 10e5")) +
geom_line(aes(y = strong_10e7, color = " 10e7")) +
geom_line(aes(y = strong_10e9, color = " 10e9")) +
scale_color_manual(name="Line Color",
values=c(" 10e5"="red", " 10e7"="blue", " 10e9"="orange")) +
ylab("Time (s)") + xlab("N. of processes")
ggplot(data = timings_strong, aes(x = procs))+
geom_line(aes(y = strong_10e5, color = " 10e5")) +
geom_line(aes(y = strong_10e7, color = " 10e7")) +
geom_line(aes(y = strong_10e9, color = " 10e9")) +
scale_color_manual(name="Line Color",
values=c(" 10e5"="red", " 10e7"="blue", " 10e9"="orange")) +
ylab("Time (s)") + xlab("N. of processes") +
scale_y_log10()
timings_strong %>% filter(procs == 1) %>%
pull(strong_10e5)
timings_strong %>% mutate(speed_10e5 =
timings_strong %>% filter(procs == 1) %>%
pull(strong_10e5) / strong_10e5,
speed_10e7 =
timings_strong %>% filter(procs == 1) %>%
pull(strong_10e7) / strong_10e7,
speed_10e9 =
timings_strong %>% filter(procs == 1) %>%
pull(strong_10e9) / strong_10e9)
ggplot(data=timings_strong, aes(x = procs)) +
geom_line(aes(y = speed_10e9))
timings_strong = timings_strong %>% mutate(speed_10e5 =
timings_strong %>% filter(procs == 1) %>%
pull(strong_10e5) / strong_10e5,
speed_10e7 =
timings_strong %>% filter(procs == 1) %>%
pull(strong_10e7) / strong_10e7,
speed_10e9 =
timings_strong %>% filter(procs == 1) %>%
pull(strong_10e9) / strong_10e9)
ggplot(data=timings_strong, aes(x = procs)) +
geom_line(aes(y = speed_10e9))
ggplot(data=timings_strong, aes(x = procs)) +
geom_line(aes(y = speed_10e9)) +
stat_function(fun = function(x)x)
ggplot(data=timings_strong, aes(x = procs)) +
geom_line(aes(y = speed_10e9, color = " 10e5"))) +
geom_line(aes(y = strong_10e7, color = " 10e7")) +
geom_line(aes(y = strong_10e9, color = " 10e9")) +
stat_function(fun = function(x)x, aes(color = "ideal")) +
scale_color_manual(name="Line Color",
values=c(" 10e5"="red", " 10e7"="blue", " 10e9"="orange",
"ideal" = "black")) +
ylab("Speedup") + xlab("N. of processes")
ggplot(data=timings_strong, aes(x = procs)) +
geom_line(aes(y = speed_10e9, color = " 10e5"))) +
geom_line(aes(y = strong_10e7, color = " 10e7")) +
geom_line(aes(y = strong_10e9, color = " 10e9")) +
stat_function(fun = function(x)x, aes(color = "ideal")) +
ggplot(data=timings_strong, aes(x = procs)) +
geom_line(aes(y = speed_10e5, color = " 10e5")) +
geom_line(aes(y = speed_10e7, color = " 10e7")) +
geom_line(aes(y = speed_10e9, color = " 10e9")) +
stat_function(fun = function(x)x, aes(color = "ideal")) +
scale_color_manual(name="Line Color",
values=c(" 10e5"="red", " 10e7"="blue", " 10e9"="orange",
"ideal" = "black")) +
ylab("Speedup") + xlab("N. of processes")
ggplot(data=timings_strong, aes(x = procs)) +
geom_line(aes(y = speed_10e5, color = " 10e5")) +
geom_line(aes(y = speed_10e7, color = " 10e7")) +
geom_line(aes(y = speed_10e9, color = " 10e9")) +
stat_function(fun = function(x)x, aes(color = "ideal"))
ggplot(data=timings_strong, aes(x = procs)) +
geom_line(aes(y = speed_10e5, color = " 10e5")) +
geom_line(aes(y = speed_10e7, color = " 10e7")) +
geom_line(aes(y = speed_10e9, color = " 10e9")) +
stat_function(fun = function(x)x, aes(color = "ideal")) +
scale_color_manual(name="Line Color",
values=c(" 10e5"="red", " 10e7"="blue", " 10e9"="orange",
"ideal" = "black"))
ggplot(data=timings_strong, aes(x = procs)) +
geom_line(aes(y = speed_10e5, color = " 10e5")) +
geom_line(aes(y = speed_10e7, color = " 10e7")) +
geom_line(aes(y = speed_10e9, color = " 10e9")) +
stat_function(fun = function(x)x, aes(color = "ideal")) +
scale_color_manual(name="Line Color",
values=c(" 10e5"="red", " 10e7"="blue", " 10e9"="orange",
"ideal" = "black")) +
ylab("Speedup") + xlab("N. of processes")
ggplot(data=timings_strong, aes(x = procs)) +
geom_line(aes(y = speed_10e5, color = " 10e5")) +
geom_line(aes(y = speed_10e7, color = " 10e7")) +
geom_line(aes(y = speed_10e9, color = " 10e9")) +
stat_function(fun = function(x)x, aes(color = "ideal")) +
scale_color_manual(name="Line Color",
values=c(" 10e5"="red", " 10e7"="blue", " 10e9"="orange",
"ideal" = "black")) +
ylab("Speedup") + xlab("N. of processes") +
scale_y_log10()
ggplot(data = timings_strong, aes(x = procs))+
geom_line(aes(y = strong_10e5, color = " 10e5")) +
geom_line(aes(y = strong_10e7, color = " 10e7")) +
geom_line(aes(y = strong_10e9, color = " 10e9")) +
scale_color_manual(name="Iteration nr.",
values=c(" 10e5"="red", " 10e7"="blue", " 10e9"="orange")) +
ylab("Time (s)") + xlab("N. of processes") +
scale_y_log10()
ggplot(data=timings_strong, aes(x = procs)) +
geom_line(aes(y = speed_10e5, color = " 10e5")) +
geom_line(aes(y = speed_10e7, color = " 10e7")) +
geom_line(aes(y = speed_10e9, color = " 10e9")) +
stat_function(fun = function(x)x, aes(color = "ideal")) +
scale_color_manual(name="",
values=c(" 10e5"="red", " 10e7"="blue", " 10e9"="orange",
"ideal" = "black")) +
ylab("Speedup") + xlab("N. of processes") +
scale_y_log10()
ggplot(data = timings_strong, aes(x = procs))+
geom_line(aes(y = strong_10e5, color = " 10e5")) +
geom_line(aes(y = strong_10e7, color = " 10e7")) +
geom_line(aes(y = strong_10e9, color = " 10e9")) +
scale_color_manual(name="Iteration nr.",
values=c(" 10e5"="red", " 10e7"="blue", " 10e9"="orange")) +
ylab("Time (s)") + xlab("N. of processes") +
scale_y_log10()
ggplot(data=timings_strong, aes(x = procs)) +
geom_line(aes(y = speed_10e5, color = " 10e5")) +
geom_line(aes(y = speed_10e7, color = " 10e7")) +
geom_line(aes(y = speed_10e9, color = " 10e9")) +
stat_function(fun = function(x)x, aes(color = "ideal")) +
scale_color_manual(name="",
values=c(" 10e5"="red", " 10e7"="blue", " 10e9"="orange",
"ideal" = "black")) +
ylab("Speedup") + xlab("N. of processes")
ggplot(data = timings_strong, aes(x = procs))+
geom_line(aes(y = strong_10e5, color = " 10e5")) +
geom_line(aes(y = strong_10e7, color = " 10e7")) +
geom_line(aes(y = strong_10e9, color = " 10e9")) +
scale_color_manual(name="Probl. size",
values=c(" 10e5"="red", " 10e7"="blue", " 10e9"="orange")) +
ylab("Time (s)") + xlab("N. of processes") +
scale_y_log10() +
ggtitle("Strong scalability - time of execution",
"Three examples: fixed problem size, varying number of processes.
y-axis with logarithmic scaling due to readability")
ggplot(data=timings_strong, aes(x = procs)) +
geom_line(aes(y = speed_10e5, color = " 10e5")) +
geom_line(aes(y = speed_10e7, color = " 10e7")) +
geom_line(aes(y = speed_10e9, color = " 10e9")) +
stat_function(fun = function(x)x, aes(color = "ideal")) +
scale_color_manual(name="",
values=c(" 10e5"="red", " 10e7"="blue", " 10e9"="orange",
"ideal" = "black")) +
ylab("Speedup") + xlab("N. of processes") +
ggtitle("Strong scalability - speedup",
"Three examples: fixed problem size, varying number of processes")
ggplot(data=timings_strong, aes(x = procs)) +
geom_line(aes(y = speed_10e5, color = " 10e5")) +
geom_line(aes(y = speed_10e7, color = " 10e7")) +
geom_line(aes(y = speed_10e9, color = " 10e9")) +
stat_function(fun = function(x)x, aes(color = "ideal")) +
scale_color_manual(name="Problem size",
values=c(" 10e5"="red", " 10e7"="blue", " 10e9"="orange",
"ideal speedup" = "black")) +
ylab("Speedup") + xlab("N. of processors") +
ggtitle("Strong scalability - speedup",
"Three examples: fixed problem size, varying number of processors")
ggplot(data=timings_strong, aes(x = procs)) +
geom_line(aes(y = speed_10e5, color = " 10e5")) +
geom_line(aes(y = speed_10e7, color = " 10e7")) +
geom_line(aes(y = speed_10e9, color = " 10e9")) +
stat_function(fun = function(x)x, aes(color = "ideal speedup")) +
scale_color_manual(name="Problem size",
values=c(" 10e5"="red", " 10e7"="blue", " 10e9"="orange",
"ideal speedup" = "black")) +
ylab("Speedup") + xlab("N. of processors") +
ggtitle("Strong scalability - speedup",
"Three examples: fixed problem size, varying number of processors")
timings_weak = tibble(procs, weak_10e5, weak_10e7, weak_10e9)
weak_10e5 = c(1.536, 1.558, 1.586, 1.639, 1.789, 1.839)
weak_10e9 = c(21.146, 21.778, 21.754, 23.07, 24.583, 24.689)
weak_10e7 = c(1.699, 1.732, 1.744, 1.848, 2.045, 2.051)
timings_weak = tibble(procs, weak_10e5, weak_10e7, weak_10e9)
ggplot(data = timings_strong, aes(x = procs))+
geom_line(aes(y = strong_10e5, color = "10e5*nprocs")) +
geom_line(aes(y = strong_10e7, color = "10e7*nprocs")) +
geom_line(aes(y = strong_10e9, color = "10e9*nprocs")) +
scale_color_manual(name="Probl. size",
values=c("10e5*nprocs"="red", "10e7*nprocs"="blue", "10e9*nprocs"="orange")) +
ylab("Time (s)") + xlab("N. of processors") +
scale_y_log10() +
ggtitle("Strong scalability - time of execution",
"Three examples: fixed problem size, varying number of processors.
y-axis with logarithmic scaling to improve readability")
ggplot(data = timings_weak, aes(x = procs))+
geom_line(aes(y = weak_10e5, color = "10e5*nprocs")) +
geom_line(aes(y = weak_10e7, color = "10e7*nprocs")) +
geom_line(aes(y = weak_10e9, color = "10e9*nprocs")) +
scale_color_manual(name="Probl. size",
values=c("10e5*nprocs"="red", "10e7*nprocs"="blue", "10e9*nprocs"="orange")) +
ylab("Time (s)") + xlab("N. of processors") +
scale_y_log10() +
ggtitle("Strong scalability - time of execution",
"Three examples: fixed problem size, varying number of processors.
y-axis with logarithmic scaling to improve readability")
timings_strong = timings_weak %>% mutate(speed_10e5 =
timings_strong %>% filter(procs == 1) %>%
pull(weak_10e5) / weak_10e5,
speed_10e7 =
timings_strong %>% filter(procs == 1) %>%
pull(weak_10e7) / weak_10e7,
speed_10e9 =
timings_strong %>% filter(procs == 1) %>%
pull(weak_10e9) / weak_10e9)
timings_weak %>% mutate(speed_10e5 =
timings_strong %>% filter(procs == 1) %>%
pull(weak_10e5) / weak_10e5
)
timings_strong = timings_weak %>% mutate(speed_10e5 =
timings_weak %>% filter(procs == 1) %>%
pull(weak_10e5) / weak_10e5,
speed_10e7 =
timings_weak %>% filter(procs == 1) %>%
pull(weak_10e7) / weak_10e7,
speed_10e9 =
timings_weak %>% filter(procs == 1) %>%
pull(weak_10e9) / weak_10e9)
ggplot(data = timings_weak, aes(x = procs))+
geom_line(aes(y = weak_10e5, color = "10e5*nprocs")) +
geom_line(aes(y = weak_10e7, color = "10e7*nprocs")) +
geom_line(aes(y = weak_10e9, color = "10e9*nprocs")) +
scale_color_manual(name="Probl. size",
values=c("10e5*nprocs"="red", "10e7*nprocs"="blue", "10e9*nprocs"="orange")) +
ylab("Time (s)") + xlab("N. of processors") +
scale_y_log10() +
ggtitle("Weak scalability - time of execution VS. number of processors",
"Three examples: varying problem size (depending upon n. procs.), varying number of processors.
y-axis with logarithmic scaling to improve readability")
ggplot(data = timings_weak, aes(x = procs))+
geom_line(aes(y = speed_10e5, color = "10e5*nprocs")) +
geom_line(aes(y = speed_10e7, color = "10e7*nprocs")) +
geom_line(aes(y = speed_10e9, color = "10e9*nprocs")) +
scale_color_manual(name="Probl. size",
values=c("10e5*nprocs"="red", "10e7*nprocs"="blue", "10e9*nprocs"="orange")) +
ylab("Time (s)") + xlab("N. of processors") +
ggtitle("Weak scalability - speedup VS. number of processors",
"Three examples: varying problem size (depending upon n. procs.), varying number of processors.
y-axis with logarithmic scaling to improve readability")
timings_weak = timings_weak %>% mutate(speed_10e5 =
timings_weak %>% filter(procs == 1) %>%
pull(weak_10e5) / weak_10e5,
speed_10e7 =
timings_weak %>% filter(procs == 1) %>%
pull(weak_10e7) / weak_10e7,
speed_10e9 =
timings_weak %>% filter(procs == 1) %>%
pull(weak_10e9) / weak_10e9)
ggplot(data = timings_weak, aes(x = procs))+
geom_line(aes(y = speed_10e5, color = "10e5*nprocs")) +
geom_line(aes(y = speed_10e7, color = "10e7*nprocs")) +
geom_line(aes(y = speed_10e9, color = "10e9*nprocs")) +
scale_color_manual(name="Probl. size",
values=c("10e5*nprocs"="red", "10e7*nprocs"="blue", "10e9*nprocs"="orange")) +
ylab("Time (s)") + xlab("N. of processors") +
ggtitle("Weak scalability - speedup VS. number of processors",
"Three examples: varying problem size (depending upon n. procs.), varying number of processors.
y-axis with logarithmic scaling to improve readability")
scale_color_manual(name="Probl. size",
values=c("10e5*nprocs"="red", "10e7*nprocs"="blue", "10e9*nprocs"="orange",
"ideal speedup" = "black")) +
ylab("Time (s)") + xlab("N. of processors") +
ggtitle("Weak scalability - speedup VS. number of processors",
"Three examples: varying problem size (depending upon n. procs.), varying number of processors.
y-axis with logarithmic scaling to improve readability")
ggplot(data = timings_weak, aes(x = procs))+
geom_line(aes(y = speed_10e5, color = "10e5*nprocs")) +
geom_line(aes(y = speed_10e7, color = "10e7*nprocs")) +
geom_line(aes(y = speed_10e9, color = "10e9*nprocs")) +
stat_function(function(x)x, aes(color = "ideal speedup")) +
scale_color_manual(name="Probl. size",
values=c("10e5*nprocs"="red", "10e7*nprocs"="blue", "10e9*nprocs"="orange",
"ideal speedup" = "black")) +
ylab("Time (s)") + xlab("N. of processors") +
ggtitle("Weak scalability - speedup VS. number of processors",
"Three examples: varying problem size (depending upon n. procs.), varying number of processors.
y-axis with logarithmic scaling to improve readability")
ggplot(data = timings_weak, aes(x = procs))+
geom_line(aes(y = speed_10e5, color = "10e5*nprocs")) +
geom_line(aes(y = speed_10e7, color = "10e7*nprocs")) +
geom_line(aes(y = speed_10e9, color = "10e9*nprocs")) +
stat_function(fun = function(x)x, aes(color = "ideal speedup")) +
scale_color_manual(name="Probl. size",
values=c("10e5*nprocs"="red", "10e7*nprocs"="blue", "10e9*nprocs"="orange",
"ideal speedup" = "black")) +
ylab("Time (s)") + xlab("N. of processors") +
ggtitle("Weak scalability - speedup VS. number of processors",
"Three examples: varying problem size (depending upon n. procs.), varying number of processors.
y-axis with logarithmic scaling to improve readability")
ggplot(data = timings_weak, aes(x = procs))+
geom_line(aes(y = speed_10e5, color = "10e5*nprocs")) +
geom_line(aes(y = speed_10e7, color = "10e7*nprocs")) +
geom_line(aes(y = speed_10e9, color = "10e9*nprocs")) +
stat_function(fun = function(x)1, aes(color = "ideal speedup")) +
scale_color_manual(name="Probl. size",
values=c("10e5*nprocs"="red", "10e7*nprocs"="blue", "10e9*nprocs"="orange",
"ideal speedup" = "black")) +
ylab("Time (s)") + xlab("N. of processors") +
ggtitle("Weak scalability - speedup VS. number of processors",
"Three examples: varying problem size (depending upon n. procs.), varying number of processors.
y-axis with logarithmic scaling to improve readability")
ggplot(data = timings_weak, aes(x = procs))+
geom_line(aes(y = speed_10e5, color = "10e5*nprocs")) +
geom_line(aes(y = speed_10e7, color = "10e7*nprocs")) +
geom_line(aes(y = speed_10e9, color = "10e9*nprocs")) +
stat_function(fun = function(x)1, aes(color = "ideal speedup")) +
scale_color_manual(name="Probl. size",
values=c("10e5*nprocs"="red", "10e7*nprocs"="blue", "10e9*nprocs"="orange",
"ideal speedup" = "black")) +
ylab("Speedup") + xlab("N. of processors") +
ggtitle("Weak scalability - speedup VS. number of processors",
"Three examples: varying problem size (depending upon n. procs.), varying number of processors")
ggplot(data = timings_weak, aes(x = procs))+
geom_line(aes(y = speed_10e5, color = "10e5*nprocs")) +
geom_line(aes(y = speed_10e7, color = "10e7*nprocs")) +
geom_line(aes(y = speed_10e9, color = "10e9*nprocs")) +
stat_function(fun = function(x)1, aes(color = "ideal speedup")) +
scale_color_manual(name="Probl. size",
values=c("10e5*nprocs"="red", "10e7*nprocs"="blue", "10e9*nprocs"="orange",
"ideal speedup" = "black")) +
ylab("Speedup") + xlab("N. of processors") +
ggtitle("Weak scalability - speedup VS. number of processors",
"Three examples: varying problem size (depending upon n. procs.),
varying number of processors")
ggplot(data=timings_strong, aes(x = procs)) +
geom_line(aes(y = speed_10e5, color = " 10e5")) +
geom_line(aes(y = speed_10e7, color = " 10e7")) +
geom_line(aes(y = speed_10e9, color = " 10e9")) +
stat_function(fun = function(x)x, aes(color = "ideal speedup")) +
scale_color_manual(name="Problem size",
values=c(" 10e5"="red", " 10e7"="blue", " 10e9"="orange",
"ideal speedup" = "black")) +
ylab("Speedup") + xlab("N. of processors") +
ggtitle("Strong scalability - speedup VS. number of processors",
"Three examples: fixed problem size, varying number of processors")
procs = c(1,2,4,8,16,20)
strong_10e5 = c(1.686, 1.568, 1.595, 1.644, 1.788, 1.866)
strong_10e7 = c(1.708, 1.623, 1.587, 1.683, 1.8, 1.818)
strong_10e9 = c(21.096, 11.621, 6.633, 4.533, 3.168,2.96 )
timings_strong = tibble(procs, strong_10e5, strong_10e7, strong_10e9)
ggplot(data = timings_strong, aes(x = procs))+
geom_line(aes(y = strong_10e5, color = " 10e5")) +
geom_line(aes(y = strong_10e7, color = " 10e7")) +
geom_line(aes(y = strong_10e9, color = " 10e9")) +
scale_color_manual(name="Probl. size",
values=c(" 10e5"="red", " 10e7"="blue", " 10e9"="orange")) +
ylab("Time (s)") + xlab("N. of processors") +
scale_y_log10() +
ggtitle("Strong scalability - time of execution VS. number of processors",
"Three examples: fixed problem size, varying number of processors.
y-axis with logarithmic scaling to improve readability")
timings_strong = timings_strong %>% mutate(speed_10e5 =
timings_strong %>% filter(procs == 1) %>%
pull(strong_10e5) / strong_10e5,
speed_10e7 =
timings_strong %>% filter(procs == 1) %>%
pull(strong_10e7) / strong_10e7,
speed_10e9 =
timings_strong %>% filter(procs == 1) %>%
pull(strong_10e9) / strong_10e9)
ggplot(data=timings_strong, aes(x = procs)) +
geom_line(aes(y = speed_10e5, color = " 10e5")) +
geom_line(aes(y = speed_10e7, color = " 10e7")) +
geom_line(aes(y = speed_10e9, color = " 10e9")) +
stat_function(fun = function(x)x, aes(color = "ideal speedup")) +
scale_color_manual(name="Problem size",
values=c(" 10e5"="red", " 10e7"="blue", " 10e9"="orange",
"ideal speedup" = "black")) +
ylab("Speedup") + xlab("N. of processors") +
ggtitle("Strong scalability - speedup VS. number of processors",
"Three examples: fixed problem size, varying number of processors")
